{"version":3,"sources":["square.js","board.js","history.js","game.js","calculateWinner.js","index.js"],"names":["Square","props","classNames","isSelected","react_default","a","createElement","className","onClick","value","Board","i","_this","this","lastSelected","winnerMoves","indexOf","key","squares","row","cols","numCols","push","renderSquare","board","numRows","renderBoardRowCols","React","Component","History","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","ascSortOrder","handleToggleClick","bind","assertThisInitialized","setState","_this2","toggleText","movesHist","history","slice","len","length","reverse","moves","map","step","move","stepNumber","isStart","desc","Game","Array","fill","xIsNext","cell","result","lines","_lines$i","slicedToArray","b","c","winner","calculateWinner","getWinner","concat","currentSelected","currentwinner","status","current","src_board","handleClick","src_history","jumpTo","ReactDOM","render","game","document","getElementById"],"mappings":"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","file":"static/js/main.dce5dbbd.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport default function Square(props) {\r\n    let classNames = \"square\"\r\n    if (props.isSelected)\r\n        classNames += \" square-selected\"\r\n    return (\r\n        <button className={classNames}\r\n            onClick={props.onClick}>\r\n            {props.value}\r\n        </button>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport Square from './square';\r\n\r\nclass Board extends React.Component {\r\n\r\n    renderSquare(i) {\r\n        let isSelected = this.props.lastSelected === i;\r\n        if (this.props.winnerMoves) {\r\n            isSelected = this.props.winnerMoves.indexOf(i) !== -1\r\n        }\r\n        return (<Square key={i}\r\n            isSelected={isSelected}\r\n            value={this.props.squares[i]}\r\n            onClick={() => this.props.onClick(i)}\r\n        />);\r\n    }\r\n\r\n    renderBoardRowCols(row) {\r\n        let cols = []\r\n        for (var i = 0; i < this.props.numCols; i++) {\r\n            cols.push(<td key={row + i}>\r\n                {this.renderSquare(row + i)}\r\n            </td>\r\n            );\r\n        }\r\n        return (<tr key={row}>{cols}</tr>);\r\n    }\r\n\r\n    render() {\r\n        let board = []\r\n        for (var i = 0; i < this.props.numRows; i++) {\r\n            board.push(this.renderBoardRowCols(this.props.numRows * i))\r\n        }\r\n        return (\r\n            <table>\r\n                <tbody>\r\n                    {board}\r\n                </tbody>\r\n            </table>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Board;\r\n","import React from \"react\";\r\n\r\nclass History extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            ascSortOrder: true\r\n        }\r\n        this.handleToggleClick.bind(this);\r\n    }\r\n\r\n    handleToggleClick() {\r\n        this.setState({\r\n            ascSortOrder: !this.state.ascSortOrder\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const ascSortOrder = this.state.ascSortOrder\r\n        const toggleText = ascSortOrder\r\n            ? \"Sort Descending\"\r\n            : \"Sort Ascending\";\r\n        const movesHist = this.props.history.slice()\r\n        const len = movesHist.length - 1\r\n        if (!ascSortOrder)\r\n            movesHist.reverse()\r\n        const moves = movesHist.map((step, move) => {\r\n            let stepNumber = move\r\n            let isStart = move === 0\r\n            if (!ascSortOrder) {\r\n                isStart = move === len\r\n                stepNumber = (len - move)\r\n            }\r\n            const classNames = this.props.stepNumber === stepNumber ? \"history-current-step\" : \"history-step\";\r\n            const desc = (isStart) ? 'Go to game start'\r\n                : 'Go to move #' + (stepNumber);\r\n            return (\r\n                <li key={move} className={classNames}>\r\n                    <button onClick={() => this.props.onClick(move)}>\r\n                        {desc}\r\n                    </button>\r\n                </li>\r\n            );\r\n        });\r\n        return (\r\n            <div className=\"history-moves\">\r\n                <strong>Moves: </strong>\r\n                <button onClick={() => this.handleToggleClick()}>{toggleText}</button>\r\n                <ol>{moves}</ol>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default History;\r\n","import React from 'react';\r\nimport calculateWinner from './calculateWinner';\r\nimport Board from './board';\r\nimport History from './history';\r\n\r\nclass Game extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            history: [{\r\n                squares: Array(9).fill(null),\r\n            }],\r\n            stepNumber: 0,\r\n            xIsNext: true,\r\n            numRows: 3,\r\n            lastSelected: null\r\n        };\r\n    }\r\n\r\n    getWinner(squares, cell) {\r\n        let result = calculateWinner(squares)\r\n        if (result) {\r\n            result.winner = 'Winner: ' + result.winner\r\n        }\r\n        else if (squares[cell] && this.state.stepNumber === squares.length) {\r\n            result = {\r\n                winner: 'Draw'\r\n            }\r\n        }\r\n        return result\r\n    }\r\n\r\n    handleClick(i) {\r\n        const history = this.state.history.slice(0, this.state.stepNumber + 1);\r\n        const current = history[history.length - 1];\r\n        const squares = current.squares.slice();\r\n        const hasWinner = this.getWinner(squares, i);\r\n        if (hasWinner) {\r\n            return;\r\n        }\r\n        squares[i] = this.state.xIsNext ? 'X' : 'O';\r\n        this.setState({\r\n            history: history.concat([{\r\n                squares: squares,\r\n            }]),\r\n            stepNumber: history.length,\r\n            xIsNext: !this.state.xIsNext,\r\n            lastSelected: i\r\n        });\r\n    }\r\n\r\n    jumpTo(step) {\r\n        let currentSelected = this.state.lastSelected\r\n        let currentwinner = this.state.winner\r\n        this.setState({\r\n            stepNumber: step,\r\n            xIsNext: (step % 2) === 0,\r\n            lastSelected: step > 0 ? currentSelected : null,\r\n            winner: step > 0 ? currentwinner : null,\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const history = this.state.history\r\n        const current = history[this.state.stepNumber]\r\n        const result = this.getWinner(current.squares, this.state.lastSelected)\r\n\r\n        let status;\r\n        if (result) {\r\n            status = result.winner;\r\n        } else {\r\n            status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O')\r\n        }\r\n        return (\r\n            <div className=\"game\">\r\n                <div className=\"game-board\">\r\n                    <Board\r\n                        lastSelected={this.state.lastSelected}\r\n                        numRows={this.state.numRows}\r\n                        numCols={this.state.numRows}\r\n                        winnerMoves={result && result.moves}\r\n                        squares={current.squares}\r\n                        onClick={(i) => this.handleClick(i)}\r\n                    />\r\n                </div>\r\n                <div className=\"game-info\">\r\n                    <div>{status}</div>\r\n                    <History\r\n                        stepNumber={this.state.stepNumber}\r\n                        history={history}\r\n                        onClick={(i) => this.jumpTo(i)} />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Game;\r\n","export default function calculateWinner(squares) {\r\n    const lines = [\r\n        [0, 1, 2],\r\n        [3, 4, 5],\r\n        [6, 7, 8],\r\n        [0, 3, 6],\r\n        [1, 4, 7],\r\n        [2, 5, 8],\r\n        [0, 4, 8],\r\n        [2, 4, 6],\r\n    ];\r\n    for (let i = 0; i < lines.length; i++) {\r\n        const [a, b, c] = lines[i];\r\n        if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n            return {\r\n                moves: lines[i],\r\n                winner: squares[a]\r\n            };\r\n        }\r\n    }\r\n    return null;\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Game from './game';\n\n// ========================================\n\nReactDOM.render(\n  <Game />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}